<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"	
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans	
		http://www.springframework.org/schema/beans/spring-beans.xsd
	 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		 
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd"
		default-init-method="init">
		
		
		
		<context:property-placeholder location="classpath:spring/db.properties"/>
		<!-- <bean class="org.apache.commons.dbcp2.BasicDataSource" id="dataSource"  -->
		<bean class="org.apache.tomcat.jdbc.pool.DataSource" id="dataSource"
			destroy-method="close">
			<!-- <property name="factory" value="org.apache.tomcat.jdbc.pool.DataSourceFactory" /> -->
			<property name="driverClassName" value="${db.driver}"/>
		    <property name="url" value="${db.url}"/>
		    <property name="username" value="${db.username}"/>
		    <property name="password" value="${db.password}"/>
		    <property name="initialSize" value="10"/>
	        <property name="testWhileIdle" value="true" />
	        <property name="timeBetweenEvictionRunsMillis" value="10000" />
	        <property name="numTestsPerEvictionRun" value="6" />
	        <property name="minEvictableIdleTimeMillis" value="30000" />
	        <property name="maxIdle" value="30" />
	        <property name="removeAbandoned" value="true" />
	        <property name="removeAbandonedTimeout" value="110" />
	        <property name="maxWait" value="60000" />
	        <property name="maxActive" value="100" />
	        <property name="validationQuery" value="select 1"/>
	        
	        <!-- <property name="maxWaitMillis" value="-1" />
	        <property name="poolPreparedStatements" value="true" />
	        <property name="removeAbandonedOnMaintenance" value="true"/>
	        <property name="removeAbandonedOnBorrow" value="true"/>
	        <property name="removeAbandonedTimeout" value="30"></property>
	        <property name="maxOpenPreparedStatements" value="100" /> -->	
		</bean>
		
		<!--
			1. 配置spring的事务 
		 -->
		<tx:annotation-driven transaction-manager="transactionManager" />
		<bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        	<property name="dataSource" ref="dataSource"/>
    	</bean>
    	
    	<!-- 
		2. mybatis的SqlSession的工厂: SqlSessionFactoryBean 
			dataSource / typeAliasesPackage
	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="typeAliasesPackage" value="com.dta.bean,com.dta.vo"/>
		<property name="mapperLocations" value="classpath:mappers/*.xml"/>
	</bean>

	<!-- 
		3. mybatis自动扫描加载Sql映射文件 : MapperScannerConfigurer 
			sqlSessionFactory / basePackage
	-->
	<bean id="config" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.dta.dao"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	<context:component-scan base-package="com.dta.service.*"/>
	
	<!-- shiro configure -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.jsp" />
		<property name="successUrl" value="/main/main.jsp" />
		<property name="unauthorizedUrl" value="/error.jsp" />
		<property name="filterChainDefinitions">
			<value>
				/logout = logout
				/rest/studentLoginInfo/login = anon
				/rest/coachBasicInfo/login = anon
				/media/** = anon
				/error.jsp = anon
				/index.jsp = anon
				/** =   displayUrlFilter, authc
			</value>
		</property>
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- Single realm app. If you have multiple realms, use the 'realms' property 
			instead. -->
		<property name="realm" ref="myRealm" />
		<!-- By default the servlet container sessions will be used. Uncomment 
			this line to use shiro's native sessions (see the JavaDoc for more): -->
		<!-- <property name="sessionMode" value="native"/> -->
		<!-- <property name="cacheManager" ref="cacheManager" /> -->
		<property name="rememberMeManager" ref="cookieRememberMeManager"/>
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<bean id="myRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">
		<property name="dataSource" ref="dataSource" />
		<property name="authenticationQuery" value="${shiro.authenticationQuery}"/>
		<property name="userRolesQuery" value="${shiro.userRolesQuery}" />
		<property name="permissionsQuery" value="${shiro.permissionsQuery}"/>
		<property name="permissionsLookupEnabled" value="true"/>
	</bean>
	<bean id="displayUrlFilter" class="com.dta.servlet.DisplayUrlFilter" />
	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/login.jsp"/>
	</bean>
	<bean id="authc" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="successUrl" value="/main/main.jsp" />
		<property name="loginUrl" value="/login.jsp" />
	</bean>
	<bean id="cookieRememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="cookie"/>
	</bean>
	<bean id="cookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<property name="path" value="/DTAServer/"/>
		<property name="maxAge" value="86400" />
		<property name="name" value="rememberMe" />
	</bean>
</beans>